SELECT
	RIGHT(website,3) AS domain
	,COUNT(*) AS num_companies
FROM accounts
GROUP BY 1

------------------------------------------------------------------------------
Use the accounts table and a CASE statement to create two groups: one group of company
names that start with a number and a second group of those company names that start with a letter.
 What proportion of company names start with a letter?


SELECT SUM(num) num, SUM(letter)
FROM (SELECT
			name,
			CASE WHEN LEFT(name, 1) IN
						('0','1','2','3','4','5','6','7','8','9')
						THEN 1 ELSE 0 END AS num,
			CASE WHEN LEFT(name, 1) IN
						('0','1','2','3','4','5','6','7','8','9')
						THEN 0 ELSE 1 END AS letter
	 FROM accounts) t1

------------------------------------------------------------------------------
Consider vowels as a, e, i, o, and u. What proportion of company names
start with a vowel, and what percent start with anything else?


SELECT SUM(volwes) volwes_count,
				SUM(other) other_count

FROM (SELECT
			name,
			CASE WHEN LEFT(name, 1) IN
						('A','E','I','O','U')
						THEN 1 ELSE 0 END AS volwes,
			CASE WHEN LEFT(name, 1) IN
						('A','E','I','O','U')
						THEN 0 ELSE 1 END AS other
	 FROM accounts) t1

There are 80 company names that start with a vowel and 271 that start with other characters.
Therefore 80/351 are vowels or 22.8%. Therefore, 77.2% of company names do not start with vowels.
------------------------------------------------------------------------------


SELECT
CONCAT(s.id,'_',r.name) AS EMP_ID_REGION
,s.name
FROM sales_reps s
JOIN region r ON s.region_id = r.id

------------------------------------------------------------------------------

From the accounts table, display the name of the client, the coordinate as
concatenated (latitude, longitude), email id of the primary point of contact
as <first letter of the primary_poc><last letter of the primary_poc>@<extracted
name and domain from the website>

SELECT
	name
	,CONCAT(lat,', ',long) AS coordinate
	,CONCAT(LEFT(primary_poc,1),RIGHT(primary_poc,1),'@',SUBSTR(website,5))
	AS email_id
FROM accounts
------------------------------------------------------------------------------

From the web_events table, display the concatenated value of account_id, '_' ,
channel, '_', count of web events of the particular channel.

WITH T1 AS (
	SELECT account_id, channel, COUNT(*)
	FROM web_events
	GROUP BY 1,2)
SELECT CONCAT(account_id,'_',t1.channel,'_',t1.count)
FROM T1
------------------------------------------------------------------------------

CONVERTING INTO CORRECT DATYE FORMAT

WITH t1 AS (
SELECT date origin_date
  		,CONCAT(SUBSTR(date,7,4),'/',
              LEFT(date,2),'/',
              SUBSTR(date,4,2),'/',
              SUBSTR(date,11)) AS new_date
FROM sf_crime_data)
SELECT origin_date,
       new_date::DATE
FROM t1

------------------------------------------------------------------------------
Use the accounts table to create first and last name columns that hold the first
and last names for the primary_poc.

WITH T1 AS (
			SELECT
			primary_poc
			,POSITION(' ' IN primary_poc) AS gap
			FROM accounts)
SELECT
primary_poc
,SUBSTR(primary_poc,1,gap) as first_name
,SUBSTR(primary_poc,gap+1) as last_name
FROM T1

------------------------------------------------------------------------------
Each company in the accounts table wants to create an email address for each
primary_poc. The email address should be the first name of the primary_poc .
last name primary_poc @ company name .com.

WITH T1 AS (
			SELECT
			name
			,primary_poc
			,POSITION(' ' IN primary_poc) AS gap
			FROM accounts)
SELECT
primary_poc
,CONCAT(SUBSTR(primary_poc,1,gap-1),'.',SUBSTR(primary_poc,gap+1),'@',name,'.com') as email
FROM T1

------------------------------------------------------------------------------
REPLACING GAPS

WITH T1 AS (
			SELECT
			name
			,primary_poc
			,POSITION(' ' IN primary_poc) AS gap
			FROM accounts)
SELECT
primary_poc
,CONCAT(SUBSTR(primary_poc,1,gap-1),'.',SUBSTR(primary_poc,gap+1),'@',REPLACE(name, ' ', ''),'.com') as email
FROM T1


------------------------------------------------------------------------------
We would also like to create an initial password, which they will change after their
first log in. The first password will be the first letter of the primary_poc's first
name (lowercase), then the last letter of their first name (lowercase), the first
letter of their last name (lowercase), the last letter of their last name (lowercase),
the number of letters in their first name, the number of letters in their last name,
and then the name of the company they are working with, all capitalized with no spaces.


WITH T1 AS
		(SELECT
		 	name,
			primary_poc
			,POSITION(' ' IN primary_poc) AS gap
			,LOWER(CONCAT(LEFT(primary_poc,1),RIGHT(primary_poc,1))) AS initials
		 	,SUBSTR(primary_poc,1,POSITION(' ' IN primary_poc)-1) as first_name
			,SUBSTR(primary_poc,POSITION(' ' IN primary_poc)+1) as last_name
		FROM accounts)
SELECT

	CONCAT(initials,
		LOWER(SUBSTR(primary_poc,gap+1,1)),
		RIGHT(primary_poc,1),
		octet_length(first_name),
		octet_length(last_name),
		REPLACE(UPPER(name), ' ','')) AS pass

FROM T1
