----------------------------------------------------------------------------
-----------------------------------JOINS------------------------------------
----------------------------------------------------------------------------

SELECT a.primary_poc
        ,w.occurred_at
        ,w.channel
        ,a.name
FROM web_events w
JOIN accounts a
ON w.account_id = a.id
WHERE a.name = 'Walmart'

---------------------------------------------------------------------------------------------------

Provide a table that provides the region for each sales_rep along with their associated accounts.
This time only for the Midwest region. Your final table should include three columns:
the region name, the sales rep name, and the account name. Sort the accounts alphabetically
(A-Z) according to account name.

SELECT
  r.name region
  ,s.name sales_rep
  ,a.name account_name
FROM sales_reps s
JOIN accounts a
  ON a.sales_rep_id = s.id
  JOIN region r
    ON r.id=s.region_id
WHERE r.name = 'Midwest'
ORDER BY a.name

--------------------------------------------------------------------------------------------------------------
Provide the name for each region for every order, as well as the account name and
the unit price they paid (total_amt_usd/total) for the order. However, you should
only provide the results if the standard order quantity exceeds 100. Your final
table should have 3 columns: region name, account name, and unit price. In order
to avoid a division by zero error, adding .01 to the denominator here is helpful
total_amt_usd/(total+0.01).

SELECT
	r.name region
	,a.name account
	,ROUND(o.total_amt_usd/(o.total+0.001),2) unit_price
FROM orders o
	JOIN accounts a
	ON o.account_id = a.id
		JOIN sales_reps s
		ON s.id = a.sales_rep_id
			JOIN region r
			ON r.id = s.region_id
WHERE o.standard_qty > 100

-------------------------------------------------------------------------------------
Provide a table that provides the region for each sales_rep along with their
associated accounts. This time only for the Midwest region.
Your final table should include three columns: the region name, the sales rep name,
and the account name. Sort the accounts alphabetically (A-Z) according to account name.

SELECT
	   r.name region
    ,s.name rep
    ,a.name account
FROM sales_reps s
JOIN region r
	ON r.id = s.region_id
    JOIN accounts a
      ON a.sales_rep_id = s.id
      WHERE r.name = 'Midwest'
      ORDER BY account

Provide a table that provides the region for each sales_rep along with their
associated accounts. This time only for accounts where the sales rep has a
first name starting with S and in the Midwest region.
Your final table should include three columns:
the region name, the sales rep name, and the account name.
Sort the accounts alphabetically (A-Z) according to account name.

SELECT
	 r.name region
    ,s.name rep
    ,a.name account
FROM sales_reps s
JOIN region r
	ON r.id = s.region_id
    JOIN accounts a
     ON a.sales_rep_id = s.id
     WHERE s.name LIKE '% K%' AND r.name = 'Midwest'
     ORDER BY account


 SELECT
 	r.name region_name
     ,a.name account_name
     ,o.total_amt_usd/(o.total+0.01) unit_price
 FROM orders o
 JOIN accounts a
 	ON o.account_id = a.id
     JOIN sales_reps s
     	ON s.id = a.sales_rep_id
         JOIN region r
         	ON r.id=s.region_id
         WHERE o.standard_qty>100

 SELECT
 	r.name region_name
     ,a.name account_name
     ,o.total_amt_usd/(o.total+0.01) unit_price
 FROM orders o
 JOIN accounts a
 ON o.account_id = a.id
 JOIN sales_reps s
 ON s.id = a.sales_rep_id
 JOIN region r
 ON r.id=s.region_id
 WHERE o.standard_qty>100 AND o.poster_qty >50
 ORDER BY unit_price

---------------------------------------------------------------------------------
What are the different channels used by account id 1001? Your final table should
 have only 2 columns: account name and the different channels. You can try SELECT DISTINCT
 to narrow down the results to only the unique values.

SELECT DISTINCT
	a.id
	,w.channel
FROM accounts a
	JOIN web_events w
	ON w.account_id = a.id
WHERE a.id = 1001
-------------------------------------------------------------------------------------
Find all the orders that occurred in 2015. Your final table should have 4 columns:
occurred_at, account name, order total, and order total_amt_usd.

SELECT
	o.occurred_at
	,a.name
	,o.total
	,o.total_amt_usd
FROM
	orders o
	JOIN accounts a
	ON a.id = o.account_id
WHERE o.occurred_at BETWEEN '2015-01-01' AND '2016-01-01'
ORDER BY 1
